{"timestamp":"2025-06-20T09:48:43.530123","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-20T09:48:43.542009","level":"info","event":"Filling up the DagBag from /home/williest/weather-data-analysis/dags/weather_etl.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-20T09:48:43.653732","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-06-20T09:48:47.551543Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T09:48:47.551821Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T09:48:47.551941Z","level":"info","event":"Current task name:extract_marrakesh","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T09:48:47.552052Z","level":"info","event":"Dag name:weather_etl_pipeline","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T09:48:47.899570","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-06-20T09:48:48.121505Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T09:48:48.122092Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-20T09:48:48.122405Z","level":"info","event":"Task operator:<Task(PythonOperator): extract_marrakesh>","chan":"stdout","logger":"task"}
